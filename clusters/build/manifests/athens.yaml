apiVersion: v1
kind: Namespace
metadata:
  name: athens

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: athens-storage
  namespace: athens
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: athens
  namespace: athens
spec:
  replicas: 1
  strategy:
    # We have only one volume, so only one pod can run at a time
    type: Recreate
  selector:
    matchLabels:
      app: athens
  template:
    metadata:
      labels:
        app: athens
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: kubermatic.io/stable
                    operator: Exists
      tolerations:
        - key: kubermatic.io/stable
          operator: Exists
      containers:
        - name: athens
          image: "gomods/athens:v0.15.4"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: "/healthz"
              port: 3000
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: "/readyz"
              port: 3000
          env:
            - name: ATHENS_GOGET_WORKERS
              value: "10"
            - name: ATHENS_STORAGE_TYPE
              value: "disk"
            - name: ATHENS_DISK_STORAGE_ROOT
              value: "/var/lib/athens"
            - name: ATHENS_LOG_LEVEL
              value: "info"
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: storage-volume
              mountPath: "/var/lib/athens"
          resources:
            requests:
              cpu: 500m
              memory: 256Mi
            limits:
              memory: 2Gi
      volumes:
        - name: storage-volume
          persistentVolumeClaim:
            claimName: athens-storage

---
apiVersion: v1
kind: Service
metadata:
  name: athens-proxy
  namespace: athens
  labels:
    app: athens
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3000
      protocol: TCP
  selector:
    app: athens
