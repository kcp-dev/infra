prowjob_namespace: "prow"
pod_namespace: "default"
# log_level: debug

# If a repository contains open source code, consider adding it to
# plank.report_templates, plank.job_url_prefix_config and plank.default_decoration_config_entries
# to generate links to public-prow.kcp.k8c.io, which does not require
# authentication.

plank:
  pod_pending_timeout: 60m
  pod_unscheduled_timeout: 60m

  report_templates:
    "*": "[Full PR test history](https://prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/api-syncagent": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/apiextensions-apiserver": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/apimachinery": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/awesome-kcp": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/client-go": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/code-generator": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/controller-runtime": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/controller-runtime-example": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/enhancements": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/friends": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/helm-charts": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/infra": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/kcp": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/kcp-dev.github.io": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/kcp-operator": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/kcp.io": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/logicalcluster": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"
    "kcp-dev/multicluster-provider": "[Full PR test history](https://public-prow.kcp.k8c.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"

  job_url_prefix_config:
    "*": https://prow.kcp.k8c.io/view/
    "kcp-dev/api-syncagent": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/apiextensions-apiserver": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/apimachinery": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/awesome-kcp": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/client-go": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/code-generator": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/controller-runtime": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/controller-runtime-example": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/enhancements": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/friends": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/helm-charts": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/infra": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/kcp": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/kcp-dev.github.io": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/kcp-operator": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/kcp.io": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/logicalcluster": "https://public-prow.kcp.k8c.io/view/"
    "kcp-dev/multicluster-provider": "https://public-prow.kcp.k8c.io/view/"

  default_decoration_config_entries:
    # default config
    - config:
        timeout: 2h
        grace_period: 5m
        utility_images:
          clonerefs: "gcr.io/k8s-prow/clonerefs:v20230518-c802d8aea4"
          initupload: "gcr.io/k8s-prow/initupload:v20230518-c802d8aea4"
          entrypoint: "gcr.io/k8s-prow/entrypoint:v20230518-c802d8aea4"
          sidecar: "gcr.io/k8s-prow/sidecar:v20230518-c802d8aea4"
        gcs_configuration:
          bucket: "s3://prow-data"
          path_strategy: "explicit"
        s3_credentials_secret: "s3-credentials-internal"
        ssh_key_secrets:
          - kcp-ci-bot-ssh-key
        ssh_host_fingerprints:
          - github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=

    - repo: "kcp-dev/api-syncagent"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/apiextensions-apiserver"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/apimachinery"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/awesome-kcp"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/client-go"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/code-generator"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/controller-runtime"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/controller-runtime-example"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/enhancements"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/friends"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/helm-charts"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/infra"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/kcp"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/kcp-dev.github.io"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/kcp-operator"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/kcp.io"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/logicalcluster"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/generic-controlplane"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"
    - repo: "kcp-dev/multicluster-provider"
      config:
        s3_credentials_secret: "s3-credentials-public"
        gcs_configuration:
          bucket: "s3://prow-public-data"

in_repo_config:
  enabled:
    "*": true

sinker:
  # How often sinker resyncs, defaults to 1h
  resync_period: 1m
  # How long build pods are kept after finishing, defaults to 24h
  max_pod_age: 2h
  # How long to keep ProwJob CRs, default is one week,
  # we increase it to 28 days and have a jobarchiver CronJob that
  # will move jobs older than 21d to another namespace.
  max_prowjob_age: 672h

deck:
  # repositories hidden in public-prow, but internal prow ignores this list and shows all repos
  hidden_repos: []
  rerun_auth_configs:
    "*":
      allow_anyone: true
  spyglass:
    # Configuring these will make an "Artifacts" link appear on the Spyglass page, linking
    # to gcsweb.
    gcs_browser_prefixes:
      '*': https://gcsweb.kcp.k8c.io/s3/
      'kcp-dev/infra': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/api-syncagent': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/apiextensions-apiserver': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/apimachinery': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/awesome-kcp': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/client-go': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/code-generator': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/controller-runtime': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/controller-runtime-example': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/enhancements': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/friends': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/helm-charts': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/kcp': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/kcp-dev.github.io': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/kcp-operator': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/kcp.io': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/logicalcluster': https://public-gcsweb.kcp.k8c.io/s3/
      'kcp-dev/multicluster-provider': https://public-gcsweb.kcp.k8c.io/s3/
    # required so that public periodics can point to the correct gcsweb
    # otherwise, gcsweb-public will just redirect to Google Cloud Console
    # instead of showing artifacts
    gcs_browser_prefixes_by_bucket:
      '*': https://gcsweb.kcp.k8c.io/s3/
      'prow-data': https://gcsweb.kcp.k8c.io/s3/
      'prow-public-data': https://public-gcsweb.kcp.k8c.io/s3/
    lenses:
      - required_files:
          - started.json
        optional_files:
          - finished.json
        lens:
          name: metadata
      - required_files:
          - build-log.txt
        lens:
          name: buildlog
          config:
            highlight_regexes:
              - timed out
              - "ERROR"
              - (FAIL|Failure \[)\b
              - panic\b
              - ^E\d{4} \d\d:\d\d:\d\d\.\d\d\d]
              - unbound variable
              - no more retries left\.
              - ^Retry [0-9]+\/[0-9]+ exited [^0], retrying in [0-9]+ seconds
              - npm ERR!
              - "WARNING: DATA RACE"
      - required_files:
          - artifacts/junit.*\.xml
        lens:
          name: junit
    size_limit: 500000000 # 500MB

github_reporter:
  job_types_to_report:
    - presubmit
    - postsubmit

tide:
  pr_status_base_urls:
    "*": https://prow.kcp.k8c.io/pr

  merge_method:
    kcp-dev: merge

  queries:
    # no release notes
    - repos:
        - kcp-dev/apiextensions-apiserver
        - kcp-dev/apimachinery
        - kcp-dev/awesome-kcp
        - kcp-dev/client-go
        - kcp-dev/code-generator
        - kcp-dev/controller-runtime
        - kcp-dev/controller-runtime-example
        - kcp-dev/enhancements
        - kcp-dev/friends
        - kcp-dev/helm-charts
        - kcp-dev/infra
        - kcp-dev/kcp-dev.github.io
        - kcp-dev/kcp.io
      labels:
        - lgtm
        - approved
      missingLabels:
        - "dco-signoff: no"
        - do-not-merge
        - do-not-merge/hold
        - do-not-merge/invalid-owners-file
        - do-not-merge/work-in-progress
        - needs-rebase

    # with release-note and needs-kind plugins
    - repos:
        - kcp-dev/api-syncagent
        - kcp-dev/kcp
        - kcp-dev/kcp-operator
        - kcp-dev/logicalcluster
        - kcp-dev/multicluster-provider
        - kcp-dev/generic-controlplane
      labels:
        - lgtm
        - approved
      missingLabels:
        - "dco-signoff: no"
        - do-not-merge
        - do-not-merge/hold
        - do-not-merge/invalid-owners-file
        - do-not-merge/release-note-label-needed
        - do-not-merge/work-in-progress
        - do-not-merge/needs-kind
        - needs-rebase

branch-protection:
  orgs:
    kcp-dev:
      repos:
        kcp:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
            - "^release-.+$"
        kcp-operator:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
            - "^release-.+$"
        api-syncagent:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
            - "^release-.+$"
        helm-charts:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
        infra:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
        multicluster-provider:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
            - "^release-.+$"
        kcp.io:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
        client-go:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
            - "^release-.+$"
            - "^kcp-.+$"
        code-generator:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
            - "^release-.+$"
            - "^kcp-.+$"
        apimachinery:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
            - "^release-.+$"
            - "^kcp-.+$"
        kubernetes:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^kcp-.+$"
        logicalcluster:
          protect: true
          required_status_checks:
            contexts:
              - dco
          restrictions:
            users: []
            teams:
              - kcp-dev/kcp-admins
          include:
            - "^main$"
            - "^release-.+$"

presets:
  ################################################################
  # Default preset, will be applied to all jobs

  - env:
      - name: DOCKER_REGISTRY_MIRROR_ADDR
        valueFrom:
          configMapKeyRef:
            name: cluster-config
            key: DOCKER_REGISTRY_MIRROR_ADDR
            optional: true
    volumeMounts:
      - name: scratch
        mountPath: /scratch
    volumes:
      - name: scratch
        emptyDir:
          medium: Memory

  ################################################################
  # opt-in to using the internal Athens go modules cache

  - labels:
      preset-goproxy: "true"
    env:
      - name: GOPROXY
        valueFrom:
          configMapKeyRef:
            name: cluster-config
            key: GOPROXY

  ################################################################
  # (prow-cluster only) mount the god kubeconfig

  - labels:
      preset-prow-kubeconfig: "true"
    volumeMounts:
      - name: prow-kubeconfig
        mountPath: /etc/prow/kubeconfig
    volumes:
      - name: prow-kubeconfig
        secret:
          secretName: kubeconfig

  ################################################################
  # (prow-cluster only) username and password for GHCR

  - labels:
      preset-ghcr-credentials: "true"
    env:
      - name: KCP_GHCR_USERNAME
        valueFrom:
          secretKeyRef:
            name: ghcr-credentials
            key: username
      - name: KCP_GHCR_PASSWORD
        valueFrom:
          secretKeyRef:
            name: ghcr-credentials
            key: password
